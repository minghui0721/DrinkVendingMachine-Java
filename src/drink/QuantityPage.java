
package drink;

import customer.CustomerIndex;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


public class QuantityPage extends javax.swing.JFrame {
    private CustomerIndex customerIndex; // Declare the variable
    private String drinkId;
    private String drinkName;
    private double unitPrice;
    private int availableQuantity;

 
    public QuantityPage() {
        initComponents();
        setSize(600, 450);
        setLocation(650, 300);
        unitPrice = 0.0; // Initialize the unit price
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        jLabel3.setText("jLabel3");

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel4.setFont(new java.awt.Font("Arial Black", 0, 55)); // NOI18N
        jLabel4.setText("Enter Quantity");

        jTextField1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(92, 90, 219));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setToolTipText("Enter the quantity you want to purchase.");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(92, 90, 219));
        jButton1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Add");
        // Set padding and border for jButton1
        jButton1.setBorder(BorderFactory.createEmptyBorder(10, 20, 10, 20));
        // Remove the border and focused border
        jButton1.setBorder(null);
        jButton1.setFocusPainted(false);
        
       // Add action listener for jButton1
        jButton1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        
        
        
        // Add hover effect to jButton1
        jButton1.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                jButton1.setBackground(new Color(0x1D1D36));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                jButton1.setBackground(new Color(92, 90, 219));
            }
        });
        
        

        jButton2.setBackground(new java.awt.Color(92, 90, 219));
        jButton2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("CLOSE");
        // Set padding and border for jButton2
        jButton2.setBorder(BorderFactory.createEmptyBorder(10, 20, 10, 20));
        // Remove the border and focused border
        jButton2.setBorder(null);
        jButton2.setFocusPainted(false);
        
        // Add hover effect to jButton2
        jButton2.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                jButton2.setBackground(new Color(0x1D1D36));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                jButton2.setBackground(new Color(92, 90, 219));
            }
        });
        
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispose();
            }
        });
        
        

          javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150,150)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(169, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel4)
                .addGap(48, 48, 48)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(174, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
    // Get the quantity entered by the user
    String quantityString = jTextField1.getText();
    
    if (!quantityString.isEmpty()) {
        try {
            int quantity = Integer.parseInt(quantityString);
            
            if (quantity > 0 && quantity <= availableQuantity) {
                // Calculate total
                double total = quantity * unitPrice;

                // Add the item to the cart.txt file
                boolean addToCartSuccess = addToCart(drinkId, drinkName, quantity, total);

                if (addToCartSuccess) {
                    // Show success message with the added item details
                    String message = "Item added to cart:\n"
                            + "Drink: " + drinkName + "\n"
                            + "Quantity: " + quantity + "\n"
                            + "Total: RM" + total;
                    JOptionPane.showMessageDialog(this, message, "Success", JOptionPane.INFORMATION_MESSAGE);

                Frame[] frames = Frame.getFrames();
                for (Frame frame : frames) {
                    if (frame instanceof JFrame) {
                        frame.dispose();
                    }
                }


                // Create a new instance of CustomerIndex
                customerIndex = new CustomerIndex();
                customerIndex.setVisible(true);

                }

            } else {
                JOptionPane.showMessageDialog(this, "Invalid quantity. Please enter a valid quantity within the available range (up to " + availableQuantity + " units).", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Invalid input. Please enter a valid integer quantity.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
}

    // Method to add item to cart.txt file
   private boolean addToCart(String drinkId, String drinkName, int quantity, double total) {
    try (BufferedReader reader = new BufferedReader(new FileReader("data/cart.txt"))) {
        String line;
        int totalQuantity = 0;
        int totalQuantity2 = 0;

        // Iterate through existing cart lines to calculate totalQuantity
        while ((line = reader.readLine()) != null) {
            String[] parts = line.split("\\|");
            if (parts.length >= 3 && parts[0].equals(drinkId)) {
                int existingQuantity = Integer.parseInt(parts[2]);
                totalQuantity += existingQuantity;
            }
        }

        totalQuantity2 = totalQuantity;
        // Add the new quantity to totalQuantity
         totalQuantity2 += quantity;

        // Compare totalQuantity with availableQuantity
        if (totalQuantity2 > availableQuantity) {
            JOptionPane.showMessageDialog(this, "You already added " + totalQuantity + " " + drinkName + " to the cart. You can only buy a total of " + availableQuantity + " " + drinkName + " !", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            // Write the updated quantity to cart.txt
            try (BufferedWriter writer = new BufferedWriter(new FileWriter("data/cart.txt", true))) {
                String cartLine = drinkId + "|" + drinkName + "|" + quantity + "|" + total;
                writer.write(cartLine);
                writer.newLine();
                return true; // Return true to indicate successful addition
            } catch (IOException e) {
                e.printStackTrace();
                return false; // Return false in case of an exception
            }
        }
    } catch (IOException e) {
        e.printStackTrace();
        return false; // Return false in case of an exception
    }
}

    
  // Method to set the drink information retrieved from the drinks.txt file
    public void setDrinkInfo(String drinkId, String drinkName, double unitPrice, int availableQuantity) {
        this.drinkId = drinkId;
        this.drinkName = drinkName;
        this.unitPrice = unitPrice;
        this.availableQuantity = availableQuantity;
        setTitle("Vending Machine System - " + drinkName);
    }
    
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }
    
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(Quantity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(Quantity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(Quantity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(Quantity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuantityPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration                   
}
