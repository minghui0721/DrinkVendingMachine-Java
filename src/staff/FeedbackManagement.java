/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package staff;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.UIManager;

/**
 *
 * @author mingh
 */
public class FeedbackManagement extends javax.swing.JFrame {

    String loggedInUsername;
    public FeedbackManagement(String loggedInUsername) {
         this.loggedInUsername = loggedInUsername;
        initComponents();
         setLocation(550,160);
         setTitle("Vending Machine System - Feedbacks");
    // Display all feedbacks by default
       displayAllFeedback();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 40)); // NOI18N
        jLabel1.setText("Feedbacks");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setMargin(new Insets(10, 10, 10, 10)); // Add padding here
        jTextArea1.setFont(new Font("Arial", Font.PLAIN, 18)); // Set font size to 18
        jTextArea1.setEditable(false); // Make the jTextArea non-editable
        jScrollPane2.setViewportView(jTextArea1);

        jScrollPane1.setViewportView(jScrollPane2);

        jButton1.setText("Current Month");
        jButton1.setBackground(new java.awt.Color(29, 29, 54));
        jButton1.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jButton1.setForeground(java.awt.Color.white);
        jButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton1.setBorderPainted(false);
        jButton1.setMargin(new Insets(10, 20, 10, 20)); // Add padding (top, left, bottom, right)

        jButton1.addMouseListener(new MouseAdapter() {
            public void mouseEntered(MouseEvent e) {
                jButton1.setBackground(Color.GRAY); // Set background color on hover
            }
            public void mouseExited(MouseEvent e) {
               jButton1.setBackground(new java.awt.Color(29, 29, 54));
            }
        });
       jButton1.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR)); // Set cursor on hover

        
        jButton1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                displayFeedbackForCurrentMonth();
            }
        });

        jButton2.setText("All Feedback");
          jButton2.setBackground(new java.awt.Color(29, 29, 54));
        jButton2.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jButton2.setForeground(java.awt.Color.white);
        jButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton2.setBorderPainted(false);
        jButton2.addMouseListener(new MouseAdapter() {
            public void mouseEntered(MouseEvent e) {
                jButton2.setBackground(Color.GRAY); // Set background color on hover
            }
            public void mouseExited(MouseEvent e) {
               jButton2.setBackground(new java.awt.Color(29, 29, 54));
            }
        });
       jButton2.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR)); // Set 
        
  
        jButton2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                displayAllFeedback();
            }
        });

        jButton3.setText("Back");
            jButton3.setBackground(new java.awt.Color(29, 29, 54));
        jButton3.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jButton3.setForeground(java.awt.Color.white);
        jButton3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton3.setBorderPainted(false);
        jButton3.addMouseListener(new MouseAdapter() {
            public void mouseEntered(MouseEvent e) {
                jButton3.setBackground(Color.GRAY); // Set background color on hover
            }
            public void mouseExited(MouseEvent e) {
               jButton3.setBackground(new java.awt.Color(29, 29, 54));
            }
        });
       jButton3.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR)); // Set 
        jButton3.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                dispose();
                
                JFrame staffFrame = new JFrame("Vending Machine System - Order History");
                    staffFrame.setSize(1200, 600);
                    staffFrame.setLocation(350, 250);
                    staffFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                    StaffIndex staffIndex = new StaffIndex(staffFrame, loggedInUsername);
                    staffFrame.getContentPane().add(staffIndex);
                    staffFrame.setVisible(true);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(260, 260, 260)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>                        

    private void displayAllFeedback() {
        List<String> feedbackRecords = readFeedbackFromFile();
        showFeedbackRecords(feedbackRecords);
    }

    private void displayFeedbackForCurrentMonth() {
        List<String> feedbackRecords = getFeedbackForCurrentMonth();
        showFeedbackRecords(feedbackRecords);
    }

    private List<String> getFeedbackForCurrentMonth() {
        Calendar cal = Calendar.getInstance();
        int currentMonth = cal.get(Calendar.MONTH) + 1; // Adding 1 since months are 0-based

        List<String> feedbackRecords = new ArrayList<>();
        List<String> allFeedback = readFeedbackFromFile();

        for (String record : allFeedback) {
            String feedbackDate = record.split("\\|")[0];
            int feedbackMonth = Integer.parseInt(feedbackDate.split("-")[1]);
            if (feedbackMonth == currentMonth) {
                feedbackRecords.add(record);
            }
        }

        return feedbackRecords;
    }

    private void showFeedbackRecords(List<String> feedbackRecords) {
        StringBuilder feedbackText = new StringBuilder();
        for (int i = 0; i < feedbackRecords.size(); i++) {
            String[] feedbackParts = feedbackRecords.get(i).split("\\|");
            if (feedbackParts.length >= 2) {
                feedbackText.append("Feedback ").append(i + 1).append(":\n")
                        .append("Date: ").append(feedbackParts[0]).append("\n")
                        .append("Feedback: ").append(feedbackParts[1]).append("\n\n");
            }
        }
        jTextArea1.setText(feedbackText.toString().trim());
    }



    private List<String> readFeedbackFromFile() {
    List<String> feedbackRecords = new ArrayList<>();

    try (BufferedReader reader = new BufferedReader(new FileReader("data/feedback.txt"))) {
        String line;
        while ((line = reader.readLine()) != null) {
            feedbackRecords.add(line);
        }
 
    } catch (IOException e) {
        e.printStackTrace();
    }

    return feedbackRecords;
}
     



    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration                   
}
